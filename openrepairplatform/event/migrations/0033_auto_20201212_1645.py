# Generated by Django 2.2.4 on 2020-12-12 15:45

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import openrepairplatform.fields


class Migration(migrations.Migration):

    dependencies = [
        ('event', '0032_event_stuffs'),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='allow_stuffs',
            field=models.BooleanField(blank=True, default=False, help_text='Les participants pourront déclarer leurs réparations lors de la réservation', verbose_name='Souhaitez-vous gérer des réparations ?'),
        ),
        migrations.AddField(
            model_name='historicalevent',
            name='allow_stuffs',
            field=models.BooleanField(blank=True, default=False, help_text='Les participants pourront déclarer leurs réparations lors de la réservation', verbose_name='Souhaitez-vous gérer des réparations ?'),
        ),
        migrations.AlterField(
            model_name='event',
            name='available_seats',
            field=models.PositiveIntegerField(default=0, verbose_name='Places disponibles'),
        ),
        migrations.AlterField(
            model_name='event',
            name='booking',
            field=models.BooleanField(default=True, verbose_name='Réservation interne au site ?'),
        ),
        migrations.AlterField(
            model_name='event',
            name='collaborator',
            field=models.CharField(blank=True, max_length=100, verbose_name='En association avec'),
        ),
        migrations.AlterField(
            model_name='event',
            name='date',
            field=models.DateField(default=datetime.date.today, verbose_name='Jour'),
        ),
        migrations.AlterField(
            model_name='event',
            name='description',
            field=openrepairplatform.fields.CleanHTMLField(blank=True, verbose_name="Description supplémentaire de l'événément (remplace la définition par défaut de l'activité)"),
        ),
        migrations.AlterField(
            model_name='event',
            name='ends_at',
            field=models.TimeField(verbose_name='Heure de fin'),
        ),
        migrations.AlterField(
            model_name='event',
            name='external',
            field=models.BooleanField(default=False, verbose_name='Réservation externe au site ?'),
        ),
        migrations.AlterField(
            model_name='event',
            name='external_url',
            field=models.URLField(blank=True, verbose_name='Lien vers un site externe. Pour la réservation externe (si activée) ou simplement pour info'),
        ),
        migrations.AlterField(
            model_name='event',
            name='is_free',
            field=models.BooleanField(default=False, verbose_name='Pas de limite de place ?'),
        ),
        migrations.AlterField(
            model_name='event',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='location.Place', verbose_name='Lieu'),
        ),
        migrations.AlterField(
            model_name='event',
            name='needed_organizers',
            field=models.PositiveIntegerField(default=0, verbose_name="Nombre d'animateurs attendus"),
        ),
        migrations.AlterField(
            model_name='event',
            name='organizers',
            field=models.ManyToManyField(blank=True, related_name='organizers_events', to=settings.AUTH_USER_MODEL, verbose_name='Organisateurs / animateurs '),
        ),
        migrations.AlterField(
            model_name='event',
            name='registered',
            field=models.ManyToManyField(blank=True, related_name='registered_events', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateurs attendus'),
        ),
        migrations.AlterField(
            model_name='event',
            name='starts_at',
            field=models.TimeField(default=django.utils.timezone.now, verbose_name='Heure de début'),
        ),
        migrations.AlterField(
            model_name='event',
            name='stuffs',
            field=models.ManyToManyField(blank=True, related_name='events', to='inventory.Stuff', verbose_name='Appareils attendus'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='available_seats',
            field=models.PositiveIntegerField(default=0, verbose_name='Places disponibles'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='booking',
            field=models.BooleanField(default=True, verbose_name='Réservation interne au site ?'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='collaborator',
            field=models.CharField(blank=True, max_length=100, verbose_name='En association avec'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='date',
            field=models.DateField(default=datetime.date.today, verbose_name='Jour'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='description',
            field=openrepairplatform.fields.CleanHTMLField(blank=True, verbose_name="Description supplémentaire de l'événément (remplace la définition par défaut de l'activité)"),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='ends_at',
            field=models.TimeField(verbose_name='Heure de fin'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='external',
            field=models.BooleanField(default=False, verbose_name='Réservation externe au site ?'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='external_url',
            field=models.URLField(blank=True, verbose_name='Lien vers un site externe. Pour la réservation externe (si activée) ou simplement pour info'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='is_free',
            field=models.BooleanField(default=False, verbose_name='Pas de limite de place ?'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='location',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.Place', verbose_name='Lieu'),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='needed_organizers',
            field=models.PositiveIntegerField(default=0, verbose_name="Nombre d'animateurs attendus"),
        ),
        migrations.AlterField(
            model_name='historicalevent',
            name='starts_at',
            field=models.TimeField(default=django.utils.timezone.now, verbose_name='Heure de début'),
        ),
        migrations.AlterField(
            model_name='historicalparticipation',
            name='amount',
            field=models.PositiveIntegerField(blank=True, default=0, verbose_name='Montant payé'),
        ),
        migrations.AlterField(
            model_name='historicalparticipation',
            name='payment',
            field=models.CharField(blank=True, choices=[('1', 'Espèces'), ('2', 'En ligne'), ('3', 'Chèque'), ('4', 'CB'), ('5', 'Monnaie locale')], default='1', max_length=1),
        ),
        migrations.AlterField(
            model_name='participation',
            name='amount',
            field=models.PositiveIntegerField(blank=True, default=0, verbose_name='Montant payé'),
        ),
        migrations.AlterField(
            model_name='participation',
            name='payment',
            field=models.CharField(blank=True, choices=[('1', 'Espèces'), ('2', 'En ligne'), ('3', 'Chèque'), ('4', 'CB'), ('5', 'Monnaie locale')], default='1', max_length=1),
        ),
    ]
