# Generated by Django 3.2.2 on 2021-05-10 10:20

from django.db import migrations
import collections


def get_doublon(apps, schema_editor):
    User = apps.get_model('user', 'CustomUser')
    Organization = apps.get_model('user', 'Organization')
    Fee = apps.get_model('user', 'Fee')

    mails = [
        mail.lower() for mail in
        list(User.objects.all().values_list("email", flat=True))
    ]
    doublons = [item for item, count in collections.Counter(mails).items() if count > 1]
    for mail in doublons:
        users = User.objects.filter(email__icontains=mail)
        good_user = User.objects.filter(email=mail).first()
        bad_users = users.exclude(pk=good_user.pk)

        visitor_organizations = []
        member_organizations = []
        volunteer_organizations = []
        active_organizations = []
        fees = []

        for user in users:
            if user.visitor_organizations.all():
                visitor_organizations += list(
                    user.visitor_organizations.all().values_list("pk", flat=True)
                )
            if user.member_organizations.all():
                member_organizations += list(
                    user.member_organizations.all().values_list("pk", flat=True)
                )
            if user.volunteer_organizations.all():
                volunteer_organizations += list(
                    user.volunteer_organizations.all().values_list("pk", flat=True)
                )
            if user.active_organizations.all():
                active_organizations += list(
                    user.active_organizations.all().values_list("pk", flat=True)
                )

            if user.fees.all():
                fees += list(
                    user.fees.all().values_list("pk", flat=True)
                )

        for orga in visitor_organizations:
            orga = Organization.objects.get(pk=orga)
            for user in bad_users:
                orga.visitors.remove(user)
            orga.visitors.add(good_user)
            orga.save()
        for orga in member_organizations:
            orga = Organization.objects.get(pk=orga)
            for user in bad_users:
                orga.members.remove(user)
            orga.members.add(good_user)
        for orga in volunteer_organizations:
            orga = Organization.objects.get(pk=orga)
            for user in bad_users:
                orga.volunteers.remove(user)
            orga.volunteers.add(good_user)
            orga.save()
        for orga in active_organizations:
            orga = Organization.objects.get(pk=orga)
            for user in bad_users:
                orga.actives.remove(user)
            orga.actives.add(good_user)
            orga.save()

        for fee in fees:
            fee = Fee.objects.get(pk=fee)
            fee.user = good_user
            fee.save()

        bad_users.delete()


class Migration(migrations.Migration):


    dependencies = [
        ('user', '0025_auto_20200826_1947'),
    ]

    operations = [
        migrations.RunPython(get_doublon, migrations.RunPython.noop),
    ]
